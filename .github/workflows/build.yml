name: Build Go Executable

# Trigger the workflow on push to the main branch
on:
  push:
    tags:
      - 'v*' # triggers on tags like v1.0.0, v2.0.0, etc..

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # Step 3: Build the Windows executable
      - name: Build Windows Executable
        run: |
          GOOS=windows GOARCH=amd64 go build -o tgen.exe ./main.go

      # Step 4: Upload the executable as an artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tgen  # Name of the artifact
          path: tgen.exe  # Path to the generated executable

      # Step 5: Create a GitHub Release (only for tagged pushes)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for authentication
        with:
          tag_name: ${{ github.ref_name }}  # e.g., v1.0.0
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # Step 6: Upload the executable to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # From create_release step
          asset_path: myapp.exe
          asset_name: myapp-windows-amd64.exe
          asset_content_type: application/octet-stream